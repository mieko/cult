#!/usr/bin/env ruby
require 'cri'
require_relative './nodes-cmd'
require_relative './roles-cmd'
require_relative './tasks-cmd'
require_relative './fleet-cmd'
require_relative './init-cmd'

cult = Cri::Command.define do
  name 'cult'
  version = '0.1.0pre'
  usage 'cult [options] [command [options...]]'
  summary 'Control a fleet of obedient zombo machines'
  description 'Cult is a tool for managing fleets of servers using a bunch ' +
              'of shell scripts and SSH.'

  required :C, :directory, 'specify an alternate project path',
                       argument: :required do |value, cmd|
    Cult.project = Cult::Project.locate(value)
    if Cult.project.nil?
      $stderr.puts "#{$0}: #{value} is not a valid cult project."
      exit 1
    end
  end

  flag :h, :help, 'show help for this command' do |value, cmd|
    puts cmd.help
    exit 0
  end

  flag :v, :version, 'show cult version' do |_, cmd|
    puts 'Cult 0.1.0pre'
    puts 'Copyright (C) 2016 Mike A. Owens, meter.md, and Contributors'
    exit 0
  end

  run do |opts, args, cmd|
    puts cmd.help
    exit 0;
  end
end

cult.add_command(Cult::CLI.nodes_cmd)
cult.add_command(Cult::CLI.roles_cmd)
cult.add_command(Cult::CLI.tasks_cmd)
cult.add_command(Cult::CLI.fleet_cmd)
cult.add_command(Cult::CLI.init_cmd)

Cult.project = Cult::Project.from_cwd

cult.run(ARGV)
exit
